//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Player/Input System/InputManager.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @inputActionAsset : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @inputActionAsset()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputManager"",
    ""maps"": [
        {
            ""name"": ""MovingPlayer"",
            ""id"": ""3a2bbf94-0319-4f3b-9b0b-a461a5e19145"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""cdca0011-63d1-4c24-bf3c-29ae0e448feb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""Value"",
                    ""id"": ""1804e443-f443-423c-9004-4a1e39d08383"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Value"",
                    ""id"": ""8759a4ca-d1f0-4d2e-ba75-f701f1723e34"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""Clamp(min=-0.1,max=0.1),Invert"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""5b8850ff-bb7f-46d2-a8ec-cf6d24ec744d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""741b12d3-9114-46f8-98a8-546ea38f1017"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""3ff956a3-6bdf-4f4f-a03a-bb84f247c5df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleRun"",
                    ""type"": ""Button"",
                    ""id"": ""84559d94-7514-409f-8611-2930a5762ef5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""5258feb0-777c-4368-b53e-ce322f06cc91"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5d43a026-c3b2-449d-bcc7-33210828e618"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""a6212f8d-576e-4151-a1d7-03155b239f23"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""24bde9b2-9a82-4355-ae4c-68a5fd7f3a12"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c20eceba-48a7-4fc5-8ddb-53bbc2fa4c17"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3b2e16fc-4b7a-4a3e-ab43-a71078cc5b94"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""58c71283-c123-479f-aa43-bb9f75783147"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""45985321-a20c-401f-af5a-14e39abd0776"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50967e31-6662-46fe-be47-ae37d449b86a"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff3b0ca9-4e84-47fc-937d-9beb176cc43e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1ee2602c-745a-4168-846a-e94225149378"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3acc694-073e-40c2-aa85-6b3a998e6b28"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8df9a7ee-2f60-4dc6-a062-bce66abc3f6b"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f4947fa-5bfb-40fa-babd-cae486dc1376"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""311d4676-c9c8-4d06-af02-b674bd512bc0"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""193b54c8-522f-41c4-967c-2d39d6dccfe8"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleRun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2fcf28d-5d6d-4a4d-9cac-61c8edc30d05"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fa2fc93-1339-4ae5-96cb-02c355009347"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MovingPlayer
        m_MovingPlayer = asset.FindActionMap("MovingPlayer", throwIfNotFound: true);
        m_MovingPlayer_Movement = m_MovingPlayer.FindAction("Movement", throwIfNotFound: true);
        m_MovingPlayer_Mouse = m_MovingPlayer.FindAction("Mouse", throwIfNotFound: true);
        m_MovingPlayer_Zoom = m_MovingPlayer.FindAction("Zoom", throwIfNotFound: true);
        m_MovingPlayer_Interact = m_MovingPlayer.FindAction("Interact", throwIfNotFound: true);
        m_MovingPlayer_Shoot = m_MovingPlayer.FindAction("Shoot", throwIfNotFound: true);
        m_MovingPlayer_Run = m_MovingPlayer.FindAction("Run", throwIfNotFound: true);
        m_MovingPlayer_ToggleRun = m_MovingPlayer.FindAction("ToggleRun", throwIfNotFound: true);
        m_MovingPlayer_Jump = m_MovingPlayer.FindAction("Jump", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MovingPlayer
    private readonly InputActionMap m_MovingPlayer;
    private IMovingPlayerActions m_MovingPlayerActionsCallbackInterface;
    private readonly InputAction m_MovingPlayer_Movement;
    private readonly InputAction m_MovingPlayer_Mouse;
    private readonly InputAction m_MovingPlayer_Zoom;
    private readonly InputAction m_MovingPlayer_Interact;
    private readonly InputAction m_MovingPlayer_Shoot;
    private readonly InputAction m_MovingPlayer_Run;
    private readonly InputAction m_MovingPlayer_ToggleRun;
    private readonly InputAction m_MovingPlayer_Jump;
    public struct MovingPlayerActions
    {
        private @inputActionAsset m_Wrapper;
        public MovingPlayerActions(@inputActionAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_MovingPlayer_Movement;
        public InputAction @Mouse => m_Wrapper.m_MovingPlayer_Mouse;
        public InputAction @Zoom => m_Wrapper.m_MovingPlayer_Zoom;
        public InputAction @Interact => m_Wrapper.m_MovingPlayer_Interact;
        public InputAction @Shoot => m_Wrapper.m_MovingPlayer_Shoot;
        public InputAction @Run => m_Wrapper.m_MovingPlayer_Run;
        public InputAction @ToggleRun => m_Wrapper.m_MovingPlayer_ToggleRun;
        public InputAction @Jump => m_Wrapper.m_MovingPlayer_Jump;
        public InputActionMap Get() { return m_Wrapper.m_MovingPlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovingPlayerActions set) { return set.Get(); }
        public void SetCallbacks(IMovingPlayerActions instance)
        {
            if (m_Wrapper.m_MovingPlayerActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnMovement;
                @Mouse.started -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnMouse;
                @Mouse.performed -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnMouse;
                @Mouse.canceled -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnMouse;
                @Zoom.started -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnZoom;
                @Zoom.performed -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnZoom;
                @Zoom.canceled -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnZoom;
                @Interact.started -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnInteract;
                @Shoot.started -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnShoot;
                @Run.started -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnRun;
                @ToggleRun.started -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnToggleRun;
                @ToggleRun.performed -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnToggleRun;
                @ToggleRun.canceled -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnToggleRun;
                @Jump.started -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_MovingPlayerActionsCallbackInterface.OnJump;
            }
            m_Wrapper.m_MovingPlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Mouse.started += instance.OnMouse;
                @Mouse.performed += instance.OnMouse;
                @Mouse.canceled += instance.OnMouse;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @ToggleRun.started += instance.OnToggleRun;
                @ToggleRun.performed += instance.OnToggleRun;
                @ToggleRun.canceled += instance.OnToggleRun;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
            }
        }
    }
    public MovingPlayerActions @MovingPlayer => new MovingPlayerActions(this);
    public interface IMovingPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnToggleRun(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
    }
}
